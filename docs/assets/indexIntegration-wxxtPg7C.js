const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-KfCSnG3Q.js","assets/main-D4vvl_YZ.js","assets/main-NIbdCOIG.css"])))=>i.map(i=>d[i]);
import{getCurrentProviderId as t}from"./mapIntegration-DbLSwcAm.js";import{_ as e}from"./main-D4vvl_YZ.js";import{s as r,g as n,p as o,c as a,a as i}from"./index-KfCSnG3Q.js";async function s(t){try{const c=function(t){const e=t.map(t=>[t.lng,t.lat]);if(e.length>0){const t=e[0],r=e[e.length-1];t[0]===r[0]&&t[1]===r[1]||e.push([t[0],t[1]])}return{type:"Feature",geometry:{type:"Polygon",coordinates:[e]},properties:{}}}(t),p=r(c),m=window.map;if(!m)throw new Error("Map instance not available for provider selection");const w=n(m),f=await o(w),u=a(f.id,p),l=i.get(u);if(l)return l;let h,y=!1;try{if(h=await f.fetchRoadNetwork(c),!h||!Array.isArray(h.nodes)||!Array.isArray(h.ways))throw new Error(`Invalid bundle structure from ${f.id} provider`);if("nrw"===f.id&&0===h.ways.length)throw new Error("NRW returned no features")}catch(s){if("osm"===f.id)throw s;{const{osmProvider:t}=await e(async()=>{const{osmProvider:t}=await import("./index-KfCSnG3Q.js").then(t=>t.o);return{osmProvider:t}},__vite__mapDeps([0,1,2]));try{h=await t.fetchRoadNetwork(c),y=!0;const e=a("osm",p);i.set(e,h)}catch(d){throw new Error(`Both ${f.id} and OSM providers failed. Last error: ${d instanceof Error?d.message:"Unknown error"}`)}}}return y||i.set(u,h),y&&function(t,e){const r=document.querySelector(".toast-container");if(r){const n=document.createElement("div");n.className="toast toast-warning",n.textContent=`${t.toUpperCase()} Daten nicht verfügbar – ${e.toUpperCase()} verwendet.`,r.appendChild(n),setTimeout(()=>{n.parentNode&&n.parentNode.removeChild(n)},5e3)}}(f.id,"osm"),h}catch(s){throw new Error(`Road network fetch failed: ${s instanceof Error?s.message:"Unknown error"}`)}}async function d(e,r){try{const r=await s(e);window.currentOsmData=r,window.osmSpeedLimiter&&window.osmSpeedLimiter.setOsmData(r);t();return r}catch(n){throw n}}function c(){if(document.getElementById("provider-indicator"))return;const t=document.createElement("div");t.id="provider-indicator",t.style.cssText="\n    position: fixed;\n    bottom: 10px;\n    left: 10px;\n    background: rgba(255, 255, 255, 0.9);\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 11px;\n    color: #333;\n    box-shadow: 0 1px 3px rgba(0,0,0,0.3);\n    z-index: 1000;\n    pointer-events: none;\n  ";const e=()=>{t.textContent="Quelle: OSM"};e(),document.body.appendChild(t),setInterval(e,5e3)}async function p(){try{c()}catch(t){}}export{c as addProviderIndicator,d as fetchOsmDataWithProvider,p as initializeProviderSystem};
